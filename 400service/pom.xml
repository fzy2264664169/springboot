<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.fzy</groupId>
  <artifactId>400service</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  
<!--   1、创建maven项目，继承maven父工程 -->
  <parent>
  	<groupId>org.springframework.boot</groupId>
  	<artifactId>spring-boot-starter-parent</artifactId>
  	<!-- <version>2.1.2.RELEASE</version> -->
  	<version>1.5.4.RELEASE</version>
  </parent>
<!--   2、修改jdk版本 -->
  <properties>
  	<java.version>1.8</java.version>
  	
  	<!-- 3.2.1、修改thymeleaf的版本 -->
  	<thymeleaf.version>3.0.2.RELEASE</thymeleaf.version>
  	<!-- 3.2.2、附带的版本修改 -->
  	<thymeleaf-layout-dialect.version>2.0.4</thymeleaf-layout-dialect.version>
  	
  	
  </properties>
  
  
<!--   3、导入依赖 -->
  <dependencies>
<!--   3.1、导入web支持：SpringMVC开发支持，Servlet相关程序支持 -->
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-web</artifactId>
  	</dependency>
<!--   	3.2导入thymeleaf页面模板依赖 -->
	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-thymeleaf</artifactId>
  	</dependency>
  	
  	
  	<!-- 4、导入shiro和spring的整合依赖 -->
<!--   	Shiro的核心API，三个核心类

Subject：用户主体（包括用户登录，注销等方法，还有一些判断授权的方法）  （关联SecurityManager，把操作交给它）

SecurityManager：安全管理器   （关联Realm）

Realm：Shiro连接数据库的桥梁 -->
  	<dependency>
  		<groupId>org.apache.shiro</groupId>
  		<artifactId>shiro-spring</artifactId>
  		<version>1.4.0</version>
  	</dependency>
  	
  	
  	
  	<!-- 5、导入mybatis相关依赖 -->
  	<!-- 5.1、数据库导入连接池 -->
	<dependency>
		<groupId>com.alibaba</groupId>
		<artifactId>druid</artifactId>
		<version>1.0.9</version>
	</dependency>
	<!-- 5.2、导入MySQL数据库驱动 -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
	</dependency>
	<!-- 5.3、导入spring boot的mybatis的启动器 -->
	<dependency>
		<groupId>org.mybatis.spring.boot</groupId>
		<artifactId>mybatis-spring-boot-starter</artifactId>
		<version>1.1.1</version>
	</dependency>
	
	<!-- 6、导入Thymeleaf扩展坐标_Thymeleaf和shiro标签整合使用 -->
	<dependency>
		<groupId>com.github.theborakompanioni</groupId>
		<artifactId>thymeleaf-extras-shiro</artifactId>
		<version>2.0.0</version>
	</dependency>
	
	<!-- 7、热部署 -->
	<!-- 7.1、热部署依赖 -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional> <!-- 这个需要为 true 热部署才有效 -->
    </dependency>
    
    <!-- 8、jpa：Java持久化规范-->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency> 
    
    <!-- 9、pagehelper：适用于mybatis的分页插件 -->
    <dependency>
        <groupId>com.github.pagehelper</groupId>
        <artifactId>pagehelper</artifactId>
        <version>4.1.6</version>
    </dependency>   
    
    <!-- 10、单元测试 -->
    <!-- 10.1、单元测试依赖 -->
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
     </dependency>    
     <!-- 10.2、springboot test -->
     <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-test</artifactId>
         <scope>test</scope>
     </dependency>	
	
  </dependencies>
  
  
  <build>
      <plugins>
      	  <!-- 7.2、热部署插件 -->
          <plugin>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-maven-plugin</artifactId>
          </plugin>
      </plugins>
  </build>  
  
  
  
  
  
  
  
  
</project>